1786. Number of Restricted Paths From First to Last Node
typedef pair<int , int> pii;
#define mod 1000000007
class Solution {
public:
    int countRestrictedPaths(int n, vector<vector<int>>& edges) {
        int ed = edges.size();
         vector<pii> adj[n+1];
        for(int i = 0 ; i < ed ; i++){
            int u = edges[i][0] , v = edges[i][1] , w = edges[i][2];
            adj[u].push_back({v ,w});
            adj[v].push_back({u,w});
        }
        priority_queue< pii , vector<pii> , greater<pii>> pq;
        pq.push({0,n});
        vector<int> dis (n+1 , INT_MAX);
        dis[n] = 0;
        while(!pq.empty()){
               pii pa = pq.top() ;  pq.pop();
           
            int u = pa.second;
            for(auto & to : adj[u]){
                int v = to.first , w = to.second;
                if(dis[v] > dis[u] + w){
                    dis[v] = dis[u] +w;
                    pq.push({dis[v] , v});
                }
            }
        }vector<int > dp(n+1,-1);
        int ans = dfs(adj , dis , n , dp);
        return ans;
    }
    int dfs(vector<pii >  adj[] , vector<int> &dis, int s , vector<int> &dp){
        if(s == 1) return 1;
        if(dp[s] != -1) return dp[s];
        int sum = 0 ;
        for(auto & to : adj[s]){
            int v = to.first , w = to.second;
            if(dis[v] > dis[s]){
                sum = (sum%mod  + dfs(adj , dis ,v , dp)%mod)%mod;
            }
        }
        return dp[s] = sum;
    }
};